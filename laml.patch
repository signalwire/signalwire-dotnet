diff --git a/src/Twilio/Base/Page.cs b/src/Twilio/Base/Page.cs
index 6c31c57d..b0d555a4 100644
--- a/src/Twilio/Base/Page.cs
+++ b/src/Twilio/Base/Page.cs
@@ -61,14 +61,11 @@ namespace Twilio.Base
         private static string UrlFromUri(Domain domain, string region, string uri)
         {
             var b = new StringBuilder();
-            b.Append("https://").Append(domain);
+            string host = TwilioClient.GetDomain() + ".signalwire.com";
+            if (TwilioClient.GetSignalwireSpaceUrl() != null)
+                host = TwilioClient.GetSignalwireSpaceUrl();
+            b.Append("https://").Append(host).Append(uri);
             
-            if (!IsNullOrEmpty(region))
-            {
-                b.Append(".").Append(region);
-            }
-
-            b.Append(".twilio.com").Append(uri);
             return b.ToString();
         }
 
@@ -170,4 +167,4 @@ namespace Twilio.Base
             );
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/Twilio/Http/Request.cs b/src/Twilio/Http/Request.cs
index 7f318aeb..8eae03d0 100644
--- a/src/Twilio/Http/Request.cs
+++ b/src/Twilio/Http/Request.cs
@@ -75,12 +75,10 @@ namespace Twilio.Http
             Method = method;
 
             var b = new StringBuilder();
-            b.Append("https://").Append(domain);
-            if (!string.IsNullOrEmpty(region))
-            {
-                b.Append(".").Append(region);
-            }
-            b.Append(".twilio.com").Append(uri);
+            string host = TwilioClient.GetDomain() + ".signalwire.com";
+            if (TwilioClient.GetSignalwireSpaceUrl() != null)
+                host = TwilioClient.GetSignalwireSpaceUrl();
+            b.Append("https://").Append(host).Append(uri);
 
             _uri = new Uri(b.ToString());
             _queryParams = queryParams ?? new List<KeyValuePair<string, string>>();
diff --git a/src/Twilio/Rest/Fax/V1/Fax/FaxMediaResource.cs b/src/Twilio/Rest/Fax/V1/Fax/FaxMediaResource.cs
index c25251ad..2e8480d9 100644
--- a/src/Twilio/Rest/Fax/V1/Fax/FaxMediaResource.cs
+++ b/src/Twilio/Rest/Fax/V1/Fax/FaxMediaResource.cs
@@ -27,7 +27,7 @@ namespace Twilio.Rest.Fax.V1.Fax
             return new Request(
                 HttpMethod.Get,
                 Rest.Domain.Fax,
-                "/v1/Faxes/" + options.PathFaxSid + "/Media/" + options.PathSid + "",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes/" + options.PathFaxSid + "/Media/" + options.PathSid + "",
                 client.Region,
                 queryParams: options.GetParams()
             );
@@ -97,7 +97,7 @@ namespace Twilio.Rest.Fax.V1.Fax
             return new Request(
                 HttpMethod.Get,
                 Rest.Domain.Fax,
-                "/v1/Faxes/" + options.PathFaxSid + "/Media",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes/" + options.PathFaxSid + "/Media",
                 client.Region,
                 queryParams: options.GetParams()
             );
@@ -236,7 +236,7 @@ namespace Twilio.Rest.Fax.V1.Fax
             return new Request(
                 HttpMethod.Delete,
                 Rest.Domain.Fax,
-                "/v1/Faxes/" + options.PathFaxSid + "/Media/" + options.PathSid + "",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes/" + options.PathFaxSid + "/Media/" + options.PathSid + "",
                 client.Region,
                 queryParams: options.GetParams()
             );
@@ -361,4 +361,4 @@ namespace Twilio.Rest.Fax.V1.Fax
         }
     }
 
-}
\ No newline at end of file
+}
diff --git a/src/Twilio/Rest/Fax/V1/FaxResource.cs b/src/Twilio/Rest/Fax/V1/FaxResource.cs
index fcf88205..a8e33e7d 100644
--- a/src/Twilio/Rest/Fax/V1/FaxResource.cs
+++ b/src/Twilio/Rest/Fax/V1/FaxResource.cs
@@ -88,7 +88,7 @@ namespace Twilio.Rest.Fax.V1
             return new Request(
                 HttpMethod.Get,
                 Rest.Domain.Fax,
-                "/v1/Faxes/" + options.PathSid + "",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes/" + options.PathSid + "",
                 client.Region,
                 queryParams: options.GetParams()
             );
@@ -155,7 +155,7 @@ namespace Twilio.Rest.Fax.V1
             return new Request(
                 HttpMethod.Get,
                 Rest.Domain.Fax,
-                "/v1/Faxes",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes",
                 client.Region,
                 queryParams: options.GetParams()
             );
@@ -306,7 +306,7 @@ namespace Twilio.Rest.Fax.V1
             return new Request(
                 HttpMethod.Post,
                 Rest.Domain.Fax,
-                "/v1/Faxes",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes",
                 client.Region,
                 postParams: options.GetParams()
             );
@@ -406,7 +406,7 @@ namespace Twilio.Rest.Fax.V1
             return new Request(
                 HttpMethod.Post,
                 Rest.Domain.Fax,
-                "/v1/Faxes/" + options.PathSid + "",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes/" + options.PathSid + "",
                 client.Region,
                 postParams: options.GetParams()
             );
@@ -478,7 +478,7 @@ namespace Twilio.Rest.Fax.V1
             return new Request(
                 HttpMethod.Delete,
                 Rest.Domain.Fax,
-                "/v1/Faxes/" + options.PathSid + "",
+                "/2010-04-01/Accounts/" + client.AccountSid + "/Faxes/" + options.PathSid + "",
                 client.Region,
                 queryParams: options.GetParams()
             );
@@ -657,4 +657,4 @@ namespace Twilio.Rest.Fax.V1
         }
     }
 
-}
\ No newline at end of file
+}
diff --git a/src/Twilio/Twilio.cs b/src/Twilio/Twilio.cs
index e6403598..8a0a19f0 100644
--- a/src/Twilio/Twilio.cs
+++ b/src/Twilio/Twilio.cs
@@ -1,5 +1,8 @@
-﻿using Twilio.Clients;
+﻿using System;
+using System.Collections.Generic;
+using Twilio.Clients;
 using Twilio.Exceptions;
+using Twilio.Http;
 
 namespace Twilio
 {
@@ -11,6 +14,9 @@ namespace Twilio
         private static string _username;
         private static string _password;
         private static string _accountSid;
+        private static HttpClient _httpClient;
+        private static string _domain;
+	private static string _signalwireSpaceUrl;
         private static ITwilioRestClient _restClient;
 
         private TwilioClient() {}
@@ -20,10 +26,13 @@ namespace Twilio
         /// </summary>
         /// <param name="username">Auth username</param>
         /// <param name="password">Auth password</param>
-        public static void Init(string username, string password)
+        /// <param name="others">Other parameters</param>
+        public static void Init(string username, string password, Dictionary<string, object> others = null)
         {
             SetUsername(username);
             SetPassword(password);
+            if (others != null) SetOthers(others);
+	    SetFromEnvironment();
         }
 
         /// <summary>
@@ -32,11 +41,14 @@ namespace Twilio
         /// <param name="username">Auth username</param>
         /// <param name="password">Auth password</param>
         /// <param name="accountSid">Account SID to use</param>
-        public static void Init(string username, string password, string accountSid)
+        /// <param name="others">Other parameters</param>
+        public static void Init(string username, string password, string accountSid, Dictionary<string, object> others = null)
         {
             SetUsername(username);
             SetPassword(password);
             SetAccountSid(accountSid);
+            if (others != null) SetOthers(others);
+	    SetFromEnvironment();
         }
 
         /// <summary>
@@ -96,6 +108,93 @@ namespace Twilio
         }
 
         /// <summary>
+        /// Set the http client
+        /// </summary>
+        /// <param name="httpClient">HTTP Client</param>
+        public static void SetHttpClient(HttpClient httpClient)
+        {
+            _httpClient = httpClient;
+        }
+
+        /// <summary>
+        /// Set the client Domain
+        /// </summary>
+        /// <param name="domain">Domain</param>
+        [Obsolete("Domain is deprecated, use SignalwireSpaceUrl instead")]
+        public static void SetDomain(string domain)
+        {
+            if (domain == null)
+            {
+                throw new AuthenticationException("Domain can not be null");
+            }
+
+            if (domain != _domain)
+            {
+                Invalidate();
+            }
+
+            _domain = domain;
+        }
+
+        /// <summary>
+        /// Get the client Domain
+        /// </summary>
+        /// <returns>Domain</returns>
+        public static string GetDomain()
+        {
+            return _domain;
+        }
+
+        /// <summary>
+        /// Set the client space url
+        /// </summary>
+        /// <param name="space">SignalWire Space Url</param>
+        public static void SetSignalwireSpaceUrl(string space)
+        {
+            if (space == null)
+            {
+                throw new AuthenticationException("Space can not be null");
+            }
+
+            if (space != _signalwireSpaceUrl)
+            {
+                Invalidate();
+            }
+
+            _signalwireSpaceUrl = space;
+        }
+
+        /// <summary>
+        /// Get the client space url
+        /// </summary>
+        /// <returns>Signalwire Space Url</returns>
+        public static string GetSignalwireSpaceUrl()
+        {
+            return _signalwireSpaceUrl;
+        }
+
+        /// <summary>
+        /// Set the other options dynamically
+        /// </summary>
+        /// <param name="others">Other parameters</param>
+        private static void SetOthers(Dictionary<string, object> others)
+        {
+            object val = null;
+            if (others.TryGetValue("accountSid", out val)) SetAccountSid((string)val);
+            if (others.TryGetValue("httpClient", out val)) SetHttpClient((HttpClient)val);
+            if (others.TryGetValue("signalwireSpaceUrl", out val)) SetSignalwireSpaceUrl((string)val);
+        }
+
+        /// <summary>
+        /// Set the other options from environment overrides
+        /// </summary>
+        private static void SetFromEnvironment()
+        {
+            string val = null;
+            if ((val = Environment.GetEnvironmentVariable("SIGNALWIRE_SPACE_URL")) != null) SetSignalwireSpaceUrl(val);
+        }
+
+        /// <summary>
         /// Get the rest client
         /// </summary>
         /// <returns>The rest client</returns>
@@ -106,14 +205,14 @@ namespace Twilio
                 return _restClient;
             }
 
-            if (_username == null || _password == null)
+            if (_username == null || _password == null || _domain == null)
             {
                 throw new AuthenticationException (
-                    "TwilioRestClient was used before AccountSid and AuthToken were set, please call TwilioClient.init()"
+                    "TwilioRestClient was used before AccountSid and AuthToken were set, please call TwilioClient.init() and TwilioClient.SetDomain"
                 );
             }
 
-            _restClient = new TwilioRestClient(_username, _password, accountSid: _accountSid);
+            _restClient = new TwilioRestClient(_username, _password, accountSid: _accountSid, httpClient: _httpClient);
             return _restClient;
         }
 
diff --git a/test/Twilio.Test/Twilio.Test.csproj b/test/Twilio.Test/Twilio.Test.csproj
index 92a29914..3f2b0842 100644
--- a/test/Twilio.Test/Twilio.Test.csproj
+++ b/test/Twilio.Test/Twilio.Test.csproj
@@ -2,7 +2,7 @@
   <PropertyGroup>
     <OutputType>Exe</OutputType>
     <RootNamespace>Twilio.Tests</RootNamespace>
-    <TargetFrameworks>netcoreapp2.0;net451;net35</TargetFrameworks>
+    <TargetFrameworks>netcoreapp2.0</TargetFrameworks>
     <RuntimeIdentifier Condition=" '$(TargetFramework)' == 'net451' ">win7-x86</RuntimeIdentifier>
     <RuntimeIdentifier Condition=" '$(TargetFramework)' == 'net35' ">win7-x86</RuntimeIdentifier>
   </PropertyGroup>
